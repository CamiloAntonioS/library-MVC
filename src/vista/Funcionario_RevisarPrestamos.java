/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.Biblioteca;
import negocio.Funcionario;

/**
 *
 * @author Renzo
 */
public class Funcionario_RevisarPrestamos extends javax.swing.JFrame {

    private Funcionario funcionario;
    private Biblioteca biblioteca;

    /**
     * Creates new form Funcionario_RevisarPrestamos
     */
    public Funcionario_RevisarPrestamos() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.biblioteca = new Biblioteca();
        this.funcionario.setBiblioteca(biblioteca);
    }

    /**
     *
     * @param funcionario
     */
    public Funcionario_RevisarPrestamos(Funcionario funcionario) {
        try {
            initComponents();
            this.setLocationRelativeTo(null);
            this.funcionario = funcionario;
            this.biblioteca = new Biblioteca();
            this.funcionario.setBiblioteca(biblioteca);
            this.listarPrestamos();
        } catch (SQLException ex) {
            Logger.getLogger(Funcionario_RevisarPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void listarPrestamos() throws SQLException {
        try {
            ResultSet rs = this.funcionario.listarPrestamosBiblioteca();
            this.llenarTabla(rs);
        } catch (Exception ex) {
            Logger.getLogger(Funcionario_RevisarPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void llenarTabla(ResultSet rs) throws SQLException {
        while (frenodev_tabla.getRowCount() > 0) {
            ((DefaultTableModel) frenodev_tabla.getModel()).removeRow(0);
        }
        int columns = rs.getMetaData().getColumnCount();
        while (rs.next()) {
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++) {
                row[i - 1] = rs.getObject(i);
            }
            ((DefaultTableModel) frenodev_tabla.getModel()).insertRow(rs.getRow() - 1, row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        frenodev_tabla = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        frenodev_filtro_nombre = new javax.swing.JTextField();
        frenodev_filtro_rut = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        fun_btn_realreno = new javax.swing.JButton();
        fun_btn_devolucion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("Revision de textos en préstamo");

        frenodev_tabla.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        frenodev_tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Prestamo", "Nombre del Texto", "Rut del Solicitante", "Dia Solicitado", "Dia Entrega", "Días Atraso", "Renovaciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        frenodev_tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(frenodev_tabla);

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel3.setText("Filtro de Nombre Texto");

        frenodev_filtro_nombre.setColumns(10);
        frenodev_filtro_nombre.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        frenodev_filtro_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                frenodev_filtro_nombreKeyReleased(evt);
            }
        });

        frenodev_filtro_rut.setColumns(10);
        frenodev_filtro_rut.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        frenodev_filtro_rut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                frenodev_filtro_rutKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel10.setText("Filtro por Rut Usuario");

        fun_btn_realreno.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        fun_btn_realreno.setText("Realizar Renovación");
        fun_btn_realreno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fun_btn_realrenoActionPerformed(evt);
            }
        });

        fun_btn_devolucion.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        fun_btn_devolucion.setText("Aceptar Devolución");
        fun_btn_devolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fun_btn_devolucionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(frenodev_filtro_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(frenodev_filtro_rut, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                        .addGap(187, 187, 187))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fun_btn_realreno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fun_btn_devolucion, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frenodev_filtro_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(frenodev_filtro_rut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fun_btn_realreno)
                    .addComponent(fun_btn_devolucion))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void frenodev_filtro_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frenodev_filtro_nombreKeyReleased
        try {
            String filtro_texto = this.frenodev_filtro_nombre.getText();
            String filtro_rut = this.frenodev_filtro_rut.getText();
            ResultSet rs = this.funcionario.filtrarPrestamosBiblioteca(filtro_texto, filtro_rut);
            this.llenarTabla(rs);
        } catch (Exception ex) {
            Logger.getLogger(Funcionario_RevisarPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_frenodev_filtro_nombreKeyReleased

    private void frenodev_filtro_rutKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frenodev_filtro_rutKeyReleased
        try {
            String filtro_texto = this.frenodev_filtro_nombre.getText();
            String filtro_rut = this.frenodev_filtro_rut.getText();
            ResultSet rs = this.funcionario.filtrarPrestamosBiblioteca(filtro_texto, filtro_rut);
            this.llenarTabla(rs);
        } catch (Exception ex) {
            Logger.getLogger(Funcionario_RevisarPrestamos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_frenodev_filtro_rutKeyReleased

    private void fun_btn_realrenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fun_btn_realrenoActionPerformed

    }//GEN-LAST:event_fun_btn_realrenoActionPerformed

    private void fun_btn_devolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fun_btn_devolucionActionPerformed
        try {
            int selectedRow = this.frenodev_tabla.getSelectedRow();
            if (selectedRow >= 0) {
                int idPrestamo = (Integer) this.frenodev_tabla.getValueAt(selectedRow, 0);
                int diasAtraso = this.biblioteca.validarDevolucion(idPrestamo);
                if (diasAtraso == -1) {
                    String nombreTexto = this.biblioteca.nombreTextoPrestamo(idPrestamo);
                    int input = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea aceptar la devolución del texto:\n" + nombreTexto, "Confirmar Recepción", JOptionPane.YES_NO_OPTION);
                    switch (input) {
                        case 0:
                            this.biblioteca.registrarDevolucion(idPrestamo);
                            JOptionPane.showMessageDialog(null, "Texto devuelto exitosamente.", "Operacion Realizada", JOptionPane.INFORMATION_MESSAGE);
                            this.listarPrestamos();
                            break;
                        case 1:
                            JOptionPane.showConfirmDialog(null, "Devolución no realizada.", "Operación Cancelada", JOptionPane.INFORMATION_MESSAGE);
                            break;
                    }
                } else if (diasAtraso > 0) {
                    Object[] respuestas = {"Recibir Pago", "Cancelar Recepción"};
                    int multaCancelar = Biblioteca.MULTA_POR_DIA * diasAtraso;
                    String mensaje = "Para devolver este texto debe pagar una multa de: $" + multaCancelar
                            + "\nDebe informar al usuario antes de continuar.";
                    int input = JOptionPane.showOptionDialog(
                            null,
                            mensaje,
                            "Confirmar Recepción",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,
                            respuestas,
                            respuestas[1]);
                    switch (input) {
                        case 0:
                            this.biblioteca.registrarDevolucionMulta(idPrestamo, multaCancelar);
                            JOptionPane.showMessageDialog(null, "Texto devuelto exitosamente.\nLa multa fue cancelada por el usuario.", "Operacion Realizada", JOptionPane.INFORMATION_MESSAGE);
                            this.listarPrestamos();
                            break;
                        case 1:
                            JOptionPane.showMessageDialog(null, "Informar al usuario que la multa seguira creciendo en un valor de $500 por día de atraso..", "Operacion Cancelada", JOptionPane.WARNING_MESSAGE);
                            break;
                    }
                }
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_fun_btn_devolucionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Funcionario_RevisarPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Funcionario_RevisarPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Funcionario_RevisarPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Funcionario_RevisarPrestamos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Funcionario_RevisarPrestamos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField frenodev_filtro_nombre;
    private javax.swing.JTextField frenodev_filtro_rut;
    private javax.swing.JTable frenodev_tabla;
    private javax.swing.JButton fun_btn_devolucion;
    private javax.swing.JButton fun_btn_realreno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
